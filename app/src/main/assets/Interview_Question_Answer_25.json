[
  {
    "SrNo": 1,
    "Question": "How would you write a query to find the nth (or 2nd) highest salary based on the department and show only one employee for each department?",
    "isHtmlTag": "TRUE",
    "quesType": "High",
    "Answer": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style type=\"text/css\">\n        body {\n            background-color: #FFFFFF;\n            color: #0A0A0A;\n            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n            font-size: 16px;\n            line-height: 1.5;\n            margin: 0;\n            padding: 10px;\n        }\n        .scrollable-container {\n            overflow-x: auto;\n            width: 100%;\n        }\n        .tg {\n            border-collapse: collapse;\n            border-color: #bbb;\n            border-spacing: 0;\n            width: auto;\n            max-width: 100%;\n        }\n        .tg th,\n        .tg td {\n            border-color: inherit;\n            border-style: solid;\n            border-width: 1px;\n            color: #0A0A0A;\n            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n            font-size: 16px;\n            font-weight: normal;\n            overflow: auto;\n            padding: 2px 5px;\n            text-align: left;\n            vertical-align: top;\n            word-break: normal;\n        }\n        .tg th {\n            background-color: #F0F0F0;\n        }\n        .tg td {\n            color: #0A0A0A;\n        }\n        .input-row-even {\n            background-color: #FFFFFF;\n        }\n        .input-row-odd {\n            background-color: #FFFFFF;\n        }\n        .SQLCode {\n            font-size: 16px;\n            font-family: 'Source Code Pro', 'Menlo', 'Monaco', 'Consolas', 'Courier New', monospace;\n            line-height: 1.4;\n            white-space: pre;\n            -o-tab-size: 4;\n            -moz-tab-size: 4;\n            -webkit-tab-size: 4;\n            color: #F8F8F8;\n            background-color: #0A090D;\n            padding: 10px;\n            border-radius: 4px;\n            overflow: auto;\n            width: 100%;\n            max-width: 100%;\n            box-sizing: border-box;\n            margin-bottom: 20px;\n        }\n        .SQLComment {\n            color: #2BF567;\n        }\n        .SQLString {\n            color: #F74380;\n        }\n        .SQLFunction {\n            color: #FEF505;\n        }\n        .SQLKeyword {\n            color: #81D4FA;\n        }\n        .SQLOperator {\n            color: #DCE1E5;\n        }\n        .SQLErrorHighlight {\n            background-color: #F74380;\n        }\n        .bold-blue {\n            font-weight: bold;\n            color: #007ACC;\n            text-align: left;\n        }\n        .bold-maroon {\n            font-weight: bold;\n            color: #B61326;\n            text-align: left;\n        }\n                ul {\n            margin-left: 0;\n            padding-left: 20px;\n        }\n        @media (max-width: 768px) {\n            .SQLCode,\n            .tg {\n                font-size: 14px;\n            }\n            .tg th,\n            .tg td {\n                padding: 8px 4px;\n            }\n        }\n        @media (max-width: 480px) {\n            .SQLCode,\n            .tg {\n                font-size: 13px;\n            }\n            .tg th,\n            .tg td {\n                padding: 6px 3px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <h4 class=\"bold-maroon\">Input Data: Table - EMPLOYEES</h4>\n    <div class=\"scrollable-container\">\n        <table class=\"tg\">\n            <thead>\n                <tr>\n                    <th>EMPLOYEE_ID</th>\n                    <th>EMPLOYEE_NAME</th>\n                    <th>DEPARTMENT_NAME</th>\n                    <th>SALARY</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"input-row-even\">\n                    <td>101</td>\n                    <td>Kurt Angle</td>\n                    <td>Sales</td>\n                    <td>110000</td>\n                </tr>\n                <tr class=\"input-row-odd\">\n                    <td>102</td>\n                    <td>Hulk Hogan</td>\n                    <td>Sales</td>\n                    <td>120000</td>\n                </tr>\n                <tr class=\"input-row-even\">\n                    <td>103</td>\n                    <td>Rey Mysterio</td>\n                    <td>Sales</td>\n                    <td>110000</td>\n                </tr>\n                <tr class=\"input-row-odd\">\n                    <td>104</td>\n                    <td>Triple H</td>\n                    <td>Sales</td>\n                    <td>85000</td>\n                </tr>\n                <tr class=\"input-row-even\">\n                    <td>105</td>\n                    <td>John Cena</td>\n                    <td>Engineering</td>\n                    <td>95000</td>\n                </tr>\n                <tr class=\"input-row-odd\">\n                    <td>106</td>\n                    <td>Ric Flair</td>\n                    <td>Engineering</td>\n                    <td>115000</td>\n                </tr>\n                <tr class=\"input-row-even\">\n                    <td>107</td>\n                    <td>Randy Savage</td>\n                    <td>Engineering</td>\n                    <td>115000</td>\n                </tr>\n                <tr class=\"input-row-odd\">\n                    <td>108</td>\n                    <td>Shawn Michaels</td>\n                    <td>Engineering</td>\n                    <td>125000</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"scrollable-container\">\n        <pre class=\"SQLCode\"><span class=\"SQLComment\">-- Query to find the 2nd highest salary by department.</span>\n<span class=\"SQLKeyword\">SELECT</span> department_name<span class=\"SQLOperator\">,</span>\n       employee_id<span class=\"SQLOperator\">,</span>\n       employee_name<span class=\"SQLOperator\">,</span>\n       salary\n<span class=\"SQLKeyword\">FROM</span>   (<span class=\"SQLKeyword\">SELECT</span> department_name<span class=\"SQLOperator\">,</span>\n               employee_id<span class=\"SQLOperator\">,</span>\n               employee_name<span class=\"SQLOperator\">,</span>\n               salary<span class=\"SQLOperator\">,</span>\n               <span class=\"SQLFunction\">ROW_NUMBER</span>()\n                 <span class=\"SQLKeyword\">OVER</span> (\n                   <span class=\"SQLKeyword\">PARTITION BY</span> department_name\n                   <span class=\"SQLKeyword\">ORDER BY</span> salary <span class=\"SQLKeyword\">DESC</span>) <span class=\"SQLKeyword\">AS</span> rn\n        <span class=\"SQLKeyword\">FROM</span>   employees)\n<span class=\"SQLKeyword\">WHERE</span>  rn <span class=\"SQLOperator\">=</span> <span class=\"SQLString\">2</span><span class=\"SQLOperator\">;</span>\n</pre>\n    </div>\n    <h4 class=\"bold-maroon\">Output:</h4>\n    <div class=\"scrollable-container\">\n        <table class=\"tg\">\n            <thead>\n                <tr>\n                    <th>DEPARTMENT_NAME</th>\n                    <th>EMPLOYEE_ID</th>\n                    <th>EMPLOYEE_NAME</th>\n                    <th>SALARY</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"input-row-even\">\n                    <td>Sales</td>\n                    <td>103</td>\n                    <td>Rey Mysterio</td>\n                    <td>110000</td>\n                </tr>\n                <tr class=\"input-row-odd\">\n                    <td>Engineering</td>\n                    <td>107</td>\n                    <td>Randy Savage</td>\n                    <td>115000</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <h4 class=\"bold-maroon\">Explanation:</h4>\n    <ul>\n        <li>\n            <strong>Select Clause:</strong>\n            <ul>\n                <li>Columns selected:\n                    <ul>\n                        <li><code>department_name</code>: The name of the department to which the employee belongs.</li>\n                        <li><code>employee_id</code>: The unique identifier for each employee.</li>\n                        <li><code>employee_name</code>: The name of the employee.</li>\n                        <li><code>salary</code>: The salary of the employee.</li>\n                    </ul>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <strong>PARTITION BY Clause:</strong>\n            <ul>\n                <li>The <code>PARTITION BY department_name</code> divides the result set into partitions based on each department. The <code>ROW_NUMBER()</code> function then assigns a sequential number to each employee's salary within these partitions.</li>\n            </ul>\n        </li>\n        <li>\n            <strong>ROW_NUMBER() Function:</strong>\n            <ul>\n                <li>This function assigns a unique rank to each row within a department partition, ordered by salary in descending order. The highest salary gets rank 1, the second highest gets rank 2, and so on.</li>\n            </ul>\n        </li>\n        <li>\n            <strong>WHERE Clause:</strong>\n            <ul>\n                <li>Filters the result to get the employee(s) with the 2nd highest salary in each department by checking where <code>rn</code> equals 2.</li>\n            </ul>\n        </li>\n    </ul>\n    <br>\n</body>\n</html>"
  },
  {
    "SrNo": 2,
    "Question": "What is the difference between the DELETE, TRUNCATE, and DROP commands in SQL?",
    "isHtmlTag": "TRUE",
    "quesType": "High",
    "Answer": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style type=\"text/css\">\n        body {\n            background-color: #FFFFFF;\n            color: #0A0A0A;\n            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n            font-size: 16px;\n            line-height: 1.5;\n            margin: 0;\n            padding: 10px;\n        }\n        .scrollable-container {\n            overflow-x: auto;\n            width: 100%;\n        }\n        .tg {\n            border-collapse: collapse;\n            border-color: #bbb;\n            border-spacing: 0;\n            width: auto;\n            max-width: 100%;\n        }\n        .tg th, .tg td {\n            border-color: inherit;\n            border-style: solid;\n            border-width: 1px;\n            color: #0A0A0A;\n            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n            font-size: 16px;\n            font-weight: normal;\n            overflow: auto;\n            padding: 2px 5px;\n            text-align: left;\n            vertical-align: top;\n            word-break: normal;\n        }\n        .tg th {\n            background-color: #F0F0F0;\n        }\n        .tg td {\n            color: #0A0A0A;\n        }\n        .input-row-even {\n            background-color: #FFFFFF;\n        }\n        .input-row-odd {\n            background-color: #FFFFFF;\n        }\n        .SQLCode {\n            font-size: 16px;\n            font-family: 'Source Code Pro', 'Menlo', 'Monaco', 'Consolas', 'Courier New', monospace;\n            line-height: 1.4;\n            white-space: pre;\n            -o-tab-size: 4;\n            -moz-tab-size: 4;\n            -webkit-tab-size: 4;\n            color: #F8F8F8;\n            background-color: #0A090D;\n            padding: 10px;\n            border-radius: 4px;\n            overflow: auto;\n            width: 100%;\n            max-width: 100%;\n            box-sizing: border-box;\n            margin-bottom: 20px;\n        }\n        .SQLComment {\n            color: #2BF567;\n        }\n        .SQLString {\n            color: #F74380;\n        }\n        .SQLFunction {\n            color: #FEF505;\n        }\n        .SQLKeyword {\n            color: #81D4FA;\n        }\n        .SQLOperator {\n            color: #DCE1E5;\n        }\n        .SQLErrorHighlight {\n            background-color: #F74380;\n        }\n        .bold-blue {\n            font-weight: bold;\n            color: #007ACC;\n            text-align: left;\n        }\n        .bold-maroon {\n            font-weight: bold;\n            color: #B61326;\n            text-align: left;\n        }\n                ul {\n            margin-left: 0;\n            padding-left: 20px;\n        }\n        @media (max-width: 768px) {\n            .SQLCode, .tg {\n                font-size: 14px;\n            }\n            .tg th, .tg td {\n                padding: 8px 4px;\n            }\n        }\n        @media (max-width: 480px) {\n            .SQLCode, .tg {\n                font-size: 13px;\n            }\n            .tg th, .tg td {\n                padding: 6px 3px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <h4 class=\"bold-maroon\">DELETE:</h4>\n    <ul>\n        <li><strong>Description</strong>: Removes specific rows from a table based on a condition specified in the WHERE clause. If no condition is provided, all rows are removed.</li>\n        <li><strong>Effect on Table</strong>: The table structure and all its attributes (columns, constraints, etc.) remain intact. Only the specified rows are deleted.</li>\n        <li><strong>Transaction Control</strong>: DELETE operations can be rolled back (i.e., they are transaction-safe).</li>\n        <li><strong>Usage Example</strong>:</li>\n    </ul>\n    <div class=\"scrollable-container\">\n<pre class=\"SQLCode\"><span class=\"SQLKeyword\">DELETE FROM</span> employees\n   <span class=\"SQLKeyword\">WHERE</span> employee_id = 101<span class=\"SQLOperator\">;</span>\n<span class=\"SQLKeyword\">DELETE FROM</span> employees<span class=\"SQLOperator\">;</span>\n</pre>\n</div>\n    <h4 class=\"bold-maroon\">TRUNCATE:</h4>\n    <ul>\n        <li><strong>Description</strong>: Removes all rows from a table, effectively resetting it to empty.</li>\n        <li><strong>Effect on Table</strong>: The table structure, columns, and constraints remain intact, but all rows are removed.</li>\n        <li><strong>Transaction Control</strong>: TRUNCATE operations cannot be rolled back in Oracle databases, making it less flexible than DELETE but faster since it doesn't generate individual row delete logs.</li>\n        <li><strong>Usage Example</strong>:</li>\n    </ul>\n    <div class=\"scrollable-container\">\n<pre class=\"SQLCode\"><span class=\"SQLKeyword\">TRUNCATE TABLE</\nspan> employees<span class=\"SQLOperator\">;</span>\n</pre>\n</div>\n    <h4 class=\"bold-maroon\">DROP:</h4>\n    <ul>\n        <li><strong>Description</strong>: Completely removes the table and its structure from the database.</li>\n        <li><strong>Effect on Table</strong>: The table and all its data, structure, columns, and constraints are permanently deleted.</li>\n        <li><strong>Transaction Control</strong>: DROP operations cannot be rolled back.</li>\n        <li><strong>Usage Example</strong>:</li>\n    </ul>\n    <div class=\"scrollable-container\">\n<pre class=\"SQLCode\"><span class=\"SQLKeyword\">DROP TABLE</span> employees<span class=\"SQLOperator\">;</span>\n</pre>\n</div>\n    <h4 class=\"bold-maroon\">Summary of Effects:</h4>\n    <ul>\n        <li><strong>DELETE</strong>:\n            <ul>\n                <li>After execution: The table <code>employees</code> still exists with all its columns and constraints, but the specified rows matching the condition (or all rows if no condition is given) are deleted.</li>\n            </ul>\n        </li>\n        <li><strong>TRUNCATE</strong>:\n            <ul>\n                <li>After execution: The table <code>employees</code> still exists with all its columns and constraints, but it has no rows; it is empty.</li>\n            </ul>\n        </li>\n        <li><strong>DROP</strong>:\n            <ul>\n                <li>After execution: The table <code>employees</code> no longer exists in the database; both its data and structure are completely removed.</li>\n            </ul>\n        </li>\n    </ul>\n<br>\n</body>\n</html>"
  },
  {
    "SrNo": 3,
    "Question": "Write a query to find and remove duplicate rows, keeping only the one with the highest timestamp.",
    "isHtmlTag": "TRUE",
    "quesType": "Low",
    "Answer": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style type=\"text/css\">\n        body {\n            background-color: #FFFFFF;\n            color: #0A0A0A;\n            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n            font-size: 16px;\n            line-height: 1.5;\n            margin: 0;\n            padding: 10px;\n        }\n        .scrollable-container {\n            overflow-x: auto;\n            width: 100%;\n        }\n        .tg {\n            border-collapse: collapse;\n            border-color: #bbb;\n            border-spacing: 0;\n            width: auto;\n            max-width: 100%;\n        }\n        .tg th, .tg td {\n            border-color: inherit;\n            border-style: solid;\n            border-width: 1px;\n            color: #0A0A0A;\n            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n            font-size: 16px;\n            font-weight: normal;\n            overflow: auto;\n            padding: 2px 5px;\n            text-align: left;\n            vertical-align: top;\n            word-break: normal;\n        }\n        .tg th {\n            background-color: #F0F0F0;\n        }\n        .tg td {\n            color: #0A0A0A;\n        }\n        .input-row-even {\n            background-color: #FFFFFF;\n        }\n        .input-row-odd {\n            background-color: #FFFFFF;\n        }\n        .SQLCode {\n            font-size: 16px;\n            font-family: 'Source Code Pro', 'Menlo', 'Monaco', 'Consolas', 'Courier New', monospace;\n            line-height: 1.4;\n            white-space: pre;\n            -o-tab-size: 4;\n            -moz-tab-size: 4;\n            -webkit-tab-size: 4;\n            color: #F8F8F8;\n            background-color: #0A090D;\n            padding: 10px;\n            border-radius: 4px;\n            overflow: auto;\n            width: 100%;\n            max-width: 100%;\n            box-sizing: border-box;\n            margin-bottom: 20px;\n        }\n        .SQLComment {\n            color: #2BF567;\n        }\n        .SQLString {\n            color: #F74380;\n        }\n        .SQLFunction {\n            color: #FEF505;\n        }\n        .SQLKeyword {\n            color: #81D4FA;\n        }\n        .SQLOperator {\n            color: #DCE1E5;\n        }\n        .SQLErrorHighlight {\n            background-color: #F74380;\n        }\n        .bold-blue {\n            font-weight: bold;\n            color: #007ACC;\n            text-align: left;\n        }\n        .bold-maroon {\n            font-weight: bold;\n            color: #B61326;\n            text-align: left;\n        }\n                ul {\n            margin-left: 0;\n            padding-left: 20px;\n        }\n        @media (max-width: 768px) {\n            .SQLCode, .tg {\n                font-size: 14px;\n            }\n            .tg th, .tg td {\n                padding: 8px 4px;\n            }\n        }\n        @media (max-width: 480px) {\n            .SQLCode, .tg {\n                font-size: 13px;\n            }\n            .tg th, .tg td {\n                padding: 6px 3px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <h4 class=\"bold-blue\">Input Data: Table - TRANSACTIONS</h4>\n    <div class=\"scrollable-container\">\n    <table class=\"tg\">\n        <thead>\n            <tr>\n                <th>TRANSACTION_ID</th>\n                <th>CUSTOMER_NAME</th>\n                <th>TIMESTAMP</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"input-row-even\">\n                <td>1</td>\n                <td>John Cena</td>\n                <td>06-01-2023 10:00:00</td>\n            </tr>\n            <tr class=\"input-row-odd\">\n                <td>1</td>\n                <td>John Cena</td>\n                <td>06-01-2023 12:00:00</td>\n            </tr>\n            <tr class=\"input-row-even\">\n                <td>1</td>\n                <td>John Cena</td>\n                <td>06-01-2023 18:00:00</td>\n            </tr>\n            <tr class=\"input-row-odd\">\n                <td>2</td>\n                <td>The Rock</td>\n                <td>06-02-2023 08:00:00</td>\n            </tr>\n            <tr class=\"input-row-even\">\n                <td>2</td>\n                <td>The Rock</td>\n                <td>06-02-2023 09:00:00</td>\n            </tr>\n            <tr class=\"input-row-odd\">\n                <td>5</td>\n                <td>Stone Cold</td>\n                <td>06-03-2023 14:00:00</td>\n            </tr>\n        </tbody>\n            </table>\n    </div>\n    <h4 class=\"bold-blue\">Output:</h4>\n    <div class=\"scrollable-container\">\n    <table class=\"tg\">\n        <thead>\n            <tr>\n                <th>TRANSACTION_ID</th>\n                <th>CUSTOMER_NAME</th>\n                <th>TIMESTAMP</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"input-row-even\">\n                <td>1</td>\n                <td>John Cena</td>\n                <td>06-01-2023 18:00:00</td>\n            </tr>\n            <tr class=\"input-row-odd\">\n                <td>2</td>\n                <td>The Rock</td>\n                <td>06-02-2023 09:00:00</td>\n            </tr>\n            <tr class=\"input-row-even\">\n                <td>5</td>\n                <td>Stone Cold</td>\n                <td>06-03-2023 14:00:00</td>\n            </tr>\n        </tbody>\n            </table>\n    </div>\n    <h4 class=\"bold-blue\">Method 1: Using Aggregated Functions</h4>\n    <div class=\"scrollable-container\">\n<pre class=\"SQLCode\"><span class=\"SQLComment\">--Method 1 by using Aggregated functions</span>\n<span class=\"SQLKeyword\">DELETE FROM</span> transactions t\n<span class=\"SQLKeyword\">WHERE</span> (<span class=\"SQLKeyword\">transaction_id</span><span class=\"SQLOperator\">,</span>customer_name<span class=\"SQLOperator\">,</span>timestamp) <span class=\"SQLKeyword\">not IN</span> (\n        <span class=\"SQLKeyword\">SELECT</span> transaction_id<span class=\"SQLOperator\">,</span>customer_name<span class=\"SQLOperator\">,</span> <span class=\"SQLFunction\">max</span>(timestamp)\n        <span class=\"SQLKeyword\">FROM</span> transactions\n        <span class=\"SQLKeyword\">group by</span> transaction_id<span class=\"SQLOperator\">,</span>customer_name)<span class=\"SQLOperator\">;</span>\n</pre>\n</div>\n    <h4 class=\"bold-blue\">Method 2: Using Analytical Functions</h4>\n    <div class=\"scrollable-container\">\n<pre class=\"SQLCode\"><span class=\"SQLComment\">--Method 2 by using Analytical functions</span>\n<span class=\"SQLKeyword\">DELETE FROM</span> transactions\n      <span class=\"SQLKeyword\">WHERE</span> (<span class=\"SQLKeyword\">transaction_id</span><span class=\"SQLOperator\">,</span> <span class=\"SQLKeyword\">TIMESTAMP</span>) <span class=\"SQLKeyword\">IN</span> (\n  <span class=\"SQLKeyword\">SELECT</span> transaction_id<span class=\"SQLOperator\">,</span>\n         <span class=\"SQLKeyword\">TIMESTAMP</span>\n    <span class=\"SQLKeyword\">FROM</span> (\n           <span class=\"SQLKeyword\">SELECT</span> transaction_id<span class=\"SQLOperator\">,</span>\n                  <span class=\"SQLKeyword\">TIMESTAMP</span><span class=\"SQLOperator\">,</span>\n                  <span class=\"SQLFunction\">ROW_NUMBER</span>() <span class=\"SQLKeyword\">OVER</span> (<span class=\"SQLKeyword\">PARTITION BY</span> transaction_id<span class=\"SQLOperator\">,</span>\n                  customer_name <span class=\"SQLKeyword\">ORDER BY</span> <span class=\"SQLKeyword\">TIMESTAMP DESC</span>) <span class=\"SQLKeyword\">AS</span> rnk\n             <span class=\"SQLKeyword\">FROM</span> transactions\n         )\n   <span class=\"SQLKeyword\">WHERE</span> rnk <span class=\"SQLOperator\">&gt;</span> <span class=\"SQLString\">1</span>\n)<span class=\"SQLOperator\">;</span>\n</pre>\n</div>\n    <h4 class=\"bold-maroon\">Explanation:</h4>\n    <ul>\n        <li>\n            <strong>Method 1:</strong> Uses a subquery to find the maximum timestamp for each combination of <code>transaction_id</code> and <code>customer_name</code>. Deletes rows from the <code>transactions</code> table that do not have the maximum timestamp.\n        </li>\n        <li>\n \n <strong>Method 2:</strong> Uses the <code>ROW_NUMBER()</code> analytical function to assign a rank to each row within each <code>transaction_id</code> and <code>customer_name</code> partition, ordered by timestamp in descending order. Deletes rows with a rank greater than 1, keeping only the row with the highest timestamp.\n        </li>\n    </ul>\n<br>\n</body>\n</html>"
  },
  {
    "SrNo": 4,
    "Question": "What strategies can improve the performance of a query with multiple subqueries?",
    "isHtmlTag": "TRUE",
    "quesType": "High",
    "Answer": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style type=\"text/css\">\n        body {\n            background-color: #FFFFFF;\n            color: #0A0A0A;\n            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n            font-size: 16px;\n            line-height: 1.5;\n            margin: 0;\n            padding: 10px;\n        }\n        .scrollable-container {\n            overflow-x: auto;\n            width: 100%;\n        }\n        .SQLCode {\n            font-size: 16px;\n            font-family: 'Source Code Pro', 'Menlo', 'Monaco', 'Consolas', 'Courier New', monospace;\n            line-height: 1.4;\n            white-space: pre;\n            -o-tab-size: 4;\n            -moz-tab-size: 4;\n            -webkit-tab-size: 4;\n            color: #F8F8F8;\n            background-color: #0A090D;\n            padding: 10px;\n            border-radius: 4px;\n            overflow: auto;\n            width: 100%;\n            max-width: 100%;\n            box-sizing: border-box;\n            margin-bottom: 20px;\n        }\n        .SQLComment {\n            color: #2BF567;\n        }\n        .SQLString {\n            color: #F74380;\n        }\n        .SQLFunction {\n            color: #FEF505;\n        }\n        .SQLKeyword {\n            color: #81D4FA;\n        }\n        .SQLOperator {\n            color: #DCE1E5;\n        }\n        .SQLErrorHighlight {\n            background-color: #F74380;\n        }\n        .bold-blue {\n            font-weight: bold;\n            color: #007ACC;\n            text-align: left;\n        }\n        .bold-maroon {\n            font-weight: bold;\n            color: #B61326;\n            text-align: left;\n        }\n                ul {\n            margin-left: 0;\n            padding-left: 20px;\n        }\n        @media (max-width: 768px) {\n            .SQLCode {\n                font-size: 14px;\n            }\n        }\n        @media (max-width: 480px) {\n            .SQLCode {\n                font-size: 13px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <h4 class=\"bold-blue\">Strategies to improve the performance of a query with multiple subqueries:</h4>\n    <ol>\n        <li><strong>Optimize Individual Subqueries:</strong> Ensure each subquery is efficient and has appropriate indexes on the tables referenced by the subqueries.</li>\n        <li><strong>Use Indexes:</strong> Index columns used in joins, filters, and sorts. Consider composite indexes for frequently used column combinations.</li>\n        <li><strong>Avoid Correlated Subqueries:</strong> Rewrite them as joins when possible to avoid execution for each row of the outer query.</li>\n        <li><strong>Leverage WITH Clause:</strong> Use the WITH clause (CTEs) to simplify and potentially improve performance by materializing subqueries.</li>\n        <li><strong>Use EXISTS Instead of IN:</strong> EXISTS can be more efficient than IN for large subquery results.</li>\n        <li><strong>Materialized Views:</strong> Use materialized views for frequently accessed subquery results to save processing time.</li>\n        <li><strong>Query Rewriting:</strong> Simplify or combine subqueries, or use different query structures for better performance.</li>\n        <li><strong>Partitioning:</strong> Improve performance by partitioning large datasets.</li>\n        <li><strong>Statistics:</strong> Ensure up-to-date optimizer statistics using <code>DBMS_STATS</code>.</li>\n    </ol>\n    <h4 class=\"bold-blue\">&bull; Example of Subquery Optimization:</h4>\n    <div class=\"scrollable-container\">\n<pre class=\"SQLCode\"><span class=\"SQLComment\">-- Original Query:</span>\n<span class=\"SQLKeyword\">SELECT</span> <span class=\"SQLKeyword\">*</span>\n<span class=\"SQLKeyword\">FROM</span>   employees e\n<span class=\"SQLKeyword\">WHERE</span>  e<span class=\"SQLOperator\">.</span>salary <span class=\"SQLOperator\">></span> (<span class=\"SQLKeyword\">SELECT</span> <span class=\"SQLFunction\">Avg</span>(salary)\n                   <span class=\"SQLKeyword\">FROM</span>   employees\n               <span class=\"SQLKeyword\">WHERE</span>  department_id <span class=\"SQLOperator\">=</span> e<span class=\"SQLOperator\">.</span>department_id)\n   <span class=\"SQLKeyword\">AND</span> e<span class=\"SQLOperator\">.</span>employee_id <span class=\"SQLKeyword\">IN</span> (<span class=\"SQLKeyword\">SELECT</span> employee_id\n                        <span class=\"SQLKeyword\">FROM</span>   employee_projects\n                        <span class=\"SQLKeyword\">WHERE</span>  project_id <span class=\"SQLOperator\">=</span> <span class=\"SQLString\">101</span>)<span class=\"SQLOperator\">;</span>\n<span class=\"SQLComment\">-- Optimized Query:</span>\n<span class=\"SQLKeyword\">WITH</span> dept_avg_salary\n     <span class=\"SQLKeyword\">AS</span> (<span class=\"SQLKeyword\">SELECT</span> department_id<span class=\"SQLOperator\">,</span>\n                <span class=\"SQLFunction\">Avg</span>(salary) <span class=\"SQLKeyword\">AS</span> avg_salary\n         <span class=\"SQLKeyword\">FROM</span>   employees\n         <span class=\"SQLKeyword\">GROUP BY</span>  department_id)<span class=\"SQLOperator\">,</span>\n     project_employees\n     <span class=\"SQLKeyword\">AS</span> (<span class=\"SQLKeyword\">SELECT</span> employee_id\n         <span class=\"SQLKeyword\">FROM</span>   employee_projects\n         <span class=\"SQLKeyword\">WHERE</span>  project_id <span class=\"SQLOperator\">=</span> <span class=\"SQLString\">101</span>)\n<span class=\"SQLKeyword\">SELECT</span> e<span class=\"SQLOperator\">.</span><span class=\"SQLKeyword\">*</span>\n<span class=\"SQLKeyword\">FROM</span>   employees e\n       <span class=\"SQLKeyword\">join</span> dept_avg_salary das\n         <span class=\"SQLKeyword\">ON</span> e<span class=\"SQLOperator\">.</span>department_id <span class=\"SQLOperator\">=</span> das<span class=\"SQLOperator\">.</span>department_id\n       <span class=\"SQLKeyword\">join</span> project_employees pe\n         <span class=\"SQLKeyword\">ON</span> e<span class=\"SQLOperator\">.</span>employee_id <span class=\"SQLOperator\">=</span> pe<span class=\"SQLOperator\">.</span>employee_id\n<span class=\"SQLKeyword\">WHERE</span>  e<span class=\"SQLOperator\">.</span>salary <span class=\"SQLOperator\">></span> das<span class=\"SQLOperator\">.</span>avg_salary<span class=\"SQLOperator\">;</span>\n</pre>\n</div>\n<h4 class=\"bold-maroon\">Explanation:</h4>\n<ul>\n    <li>\n        <strong>Original Query:</strong>\n        <ul>\n            <li>The query retrieves employees whose salary is higher than the average salary in their department and who are assigned to project 101.</li>\n            <li>Two subqueries are used:\n                <ul>\n                    <li>One subquery calculates the average salary for each department and compares it to the employee's salary.</li>\n                    <li>The other subquery checks if the employee is associated with project 101.</li>\n                </ul>\n            </li>\n        </ul>\n    </li>\n    <li>\n        <strong>Optimized Query:</strong>\n        <ul>\n            <li>Uses Common Table Expressions (CTEs) to optimize the query by precomputing the necessary data:\n                <ul>\n                    <li><code>dept_avg_salary</code> CTE calculates the average salary for each department in a single pass.</li>\n                    <li><code>project_employees</code> CTE identifies all employees associated with project 101.</li>\n                </ul>\n            </li>\n            <li>The main query joins the <code>employees</code> table with these CTEs:\n                <ul>\n                    <li>Joins with <code>dept_avg_salary</code> to compare each employee's salary with the department's average salary.</li>\n                    <li>Joins with <code>project_employees</code> to filter employees who are part of project 101.</li>\n                </ul>\n            </li>\n            <li>This approach reduces the number of subquery executions, making the query more efficient.</li>\n        </ul>\n    </li>\n</ul>\n<br>\n</body>\n</html>"
  },
  {
    "SrNo": 5,
    "Question": "Write a query to identify the top 3 customers with the most purchases.",
    "isHtmlTag": "TRUE",
    "quesType": "Medium",
    "Answer": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style type=\"text/css\">\n        body {\n            background-color: #FFFFFF;\n            color: #0A0A0A;\n            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n            font-size: 16px;\n            line-height: 1.5;\n            margin: 0;\n            padding: 10px;\n        }\n        .scrollable-container {\n            overflow-x: auto;\n            width: 100%;\n        }\n        .tg {\n            border-collapse: collapse;\n            border-color: #bbb;\n            border-spacing: 0;\n            width: auto;\n            max-width: 100%;\n        }\n        .tg th, .tg td {\n            border-color: inherit;\n            border-style: solid;\n            border-width: 1px;\n            color: #0A0A0A;\n            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n            font-size: 16px;\n            font-weight: normal;\n            overflow: auto;\n            padding: 2px 5px;\n            text-align: left;\n            vertical-align: top;\n            word-break: normal;\n        }\n        .tg th {\n            background-color: #F0F0F0;\n        }\n        .tg td {\n            color: #0A0A0A;\n        }\n        .input-row-even {\n            background-color: #FFFFFF;\n        }\n        .input-row-odd {\n            background-color: #FFFFFF;\n        }\n        .SQLCode {\n            font-size: 16px;\n            font-family: 'Source Code Pro', 'Menlo', 'Monaco', 'Consolas', 'Courier New', monospace;\n            line-height: 1.4;\n            white-space: pre;\n            -o-tab-size: 4;\n            -moz-tab-size: 4;\n            -webkit-tab-size: 4;\n            color: #F8F8F8;\n            background-color: #0A090D;\n            padding: 10px;\n            border-radius: 4px;\n            overflow: auto;\n            width: 100%;\n            max-width: 100%;\n            box-sizing: border-box;\n            margin-bottom: 20px;\n        }\n        .SQLComment {\n            color: #2BF567;\n        }\n        .SQLString {\n            color: #F74380;\n        }\n        .SQLFunction {\n            color: #FEF505;\n        }\n        .SQLKeyword {\n            color: #81D4FA;\n        }\n        .SQLOperator {\n            color: #DCE1E5;\n        }\n        .SQLErrorHighlight {\n            background-color: #F74380;\n        }\n        .bold-blue {\n            font-weight: bold;\n            color: #007ACC;\n            text-align: left;\n        }\n        .bold-maroon {\n            font-weight: bold;\n            color: #B61326;\n            text-align: left;\n        }\n        ul {\n\t    margin-left: 0;\n        padding-left: 20px;\n        }\n        @media (max-width: 768px) {\n            .SQLCode, .tg {\n                font-size: 14px;\n            }\n            .tg th, .tg td {\n                padding: 8px 4px;\n            }\n        }\n        @media (max-width: 480px) {\n            .SQLCode, .tg {\n                font-size: 13px;\n            }\n            .tg th, .tg td {\n                padding: 6px 3px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <h4 class=\"bold-maroon\">Input Data: Table - CUSTOMER_PURCHASES</h4>\n    <div class=\"scrollable-container\">\n    <table class=\"tg\">\n        <thead>\n            <tr>\n                <th>CUSTOMER_ID</th>\n                <th>CUSTOMER_NAME</th>\n                <th>PURCHASE_ID</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"input-row-even\">\n                <td>5</td>\n                <td>Chris Hemsworth</td>\n                <td>1</td>\n            </tr>\n            <tr class=\"input-row-odd\">\n                <td>1</td>\n                <td>Leonardo DiCaprio</td>\n                <td>2</td>\n            </tr>\n            <tr class=\"input-row-even\">\n                <td>3</td>\n                <td>Robert Downey Jr</td>\n                <td>3</td>\n            </tr>\n            <tr class=\"input-row-odd\">\n                <td>5</td>\n                <td>Chris Hemsworth</td>\n                <td>4</td>\n            </tr>\n            <tr class=\"input-row-even\">\n                <td>1</td>\n                <td>Leonardo DiCaprio</td>\n                <td>5</td>\n            </tr>\n            <tr class=\"input-row-odd\">\n                <td>3</td>\n                <td>Robert Downey Jr</td>\n                <td>6</td>\n            </tr>\n            <tr class=\"input-row-even\">\n                <td>5</td>\n                <td>Chris Hemsworth</td>\n                <td>7</td>\n            </tr>\n        </tbody>\n            </table>\n    </div>\n    <h4 class=\"bold-maroon\">Output:</h4>\n    <div class=\"scrollable-container\">\n    <table class=\"tg\">\n        <thead>\n            <tr>\n                <th>CUSTOMER_ID</th>\n                <th>CUSTOMER_NAME</th>\n                <th>PURCHASE_COUNT</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"input-row-even\">\n                <td>5</td>\n                <td>Chris Hemsworth</td>\n                <td>3</td>\n            </tr>\n            <tr class=\"input-row-odd\">\n                <td>1</td>\n                <td>Leonardo DiCaprio</td>\n                <td>2</td>\n            </tr>\n            <tr class=\"input-row-even\">\n                <td>3</td>\n                <td>Robert Downey Jr</td>\n                <td>2</td>\n            </tr>\n        </tbody>\n            </table>\n    </div>\n    <div class=\"scrollable-container\">\n<pre class=\"SQLCode\"><span class=\"SQLComment\">--SQL Query 1 by using Aggregated functions</span>\n<span class=\"SQLKeyword\">SELECT</span> customer_id\n    <span class=\"SQLOperator\">,</span>customer_name\n    <span class=\"SQLOperator\">,</span><span class=\"SQLFunction\">COUNT</span>(purchase_id) <span class=\"SQLKeyword\">AS</span> purchase_count\n<span class=\"SQLKeyword\">FROM</span> customer_purchases\n<span class=\"SQLKeyword\">GROUP BY</span> customer_id\n    <span class=\"SQLOperator\">,</span>customer_name\n<span class=\"SQLKeyword\">ORDER BY</span> purchase_count <span class=\"SQLKeyword\">DESC</span>\n<span class=\"SQLKeyword\">FETCH FIRST</span> <span class=\"SQLString\">3</span> <span class=\"SQLKeyword\">ROWS ONLY</span><span class=\"SQLOperator\">;</span>\n\n<span class=\"SQLComment\">--SQL Query 2 by using Aggregated and analytical functions</span>\n<span class=\"SQLKeyword\">WITH</span> ranked_customers\n<span class=\"SQLKeyword\">AS</span> (\n    <span class=\"SQLKeyword\">SELECT</span> customer_id\n        <span class=\"SQLOperator\">,</span>customer_name\n        <span class=\"SQLOperator\">,</span><span class=\"SQLFunction\">COUNT</span>(purchase_id) <span class=\"SQLKeyword\">AS</span> purchase_count\n        <span class=\"SQLOperator\">,</span><span class=\"SQLFunction\">RANK</span>() <span class=\"SQLKeyword\">OVER</span> (\n            <span class=\"SQLKeyword\">ORDER BY</span> <span class=\"SQLFunction\">COUNT</span>(purchase_id) <span class=\"SQLKeyword\">DESC</span>\n            ) <span class=\"SQLKeyword\">AS</span> rank\n    <span class=\"SQLKeyword\">FROM</span> customer_purchases\n    <span class=\"SQLKeyword\">GROUP BY</span> customer_id\n        <span class=\"SQLOperator\">,</span>customer_name\n    )\n<span class=\"SQLKeyword\">SELECT</span> customer_id\n    <span class=\"SQLOperator\">,</span>customer_name\n    <span class=\"SQLOperator\">,</span>purchase_count\n<span class=\"SQLKeyword\">FROM</span> ranked_customers\n<span class=\"SQLKeyword\">WHERE</span> rank <span class=\"SQLOperator\"><=</span> <span class=\"SQLString\">3</span><span class=\"SQLOperator\">;</span></pre>\n</div>\n        <h4 class=\"bold-maroon\">Explanation:</h4>\n        <ul>\n            <li>\n                <strong>SQL Query 1: Using Aggregated Functions</strong>\n                <ul>\n                    <li>Selects the following columns:\n                        <ul>\n                            <li><code>customer_id</code>: The unique identifier for each customer.</li>\n                            <li><code>customer_name</code>: The name of the customer.</li>\n                            <li><code>purchase_count</code>: The total number of purchases made by each customer, calculated using the <code>COUNT(purchase_id)</code> function.</li>\n                        </ul>\n                    </li>\n                    <li>Groups the results by: customer_id, customer_name\n                    </li>\n                    <li>Orders the results by <code>purchase_count</code> in descending order, so that the customers with the most purchases appear first.</li>\n                    <li>Limits the results to the top 3 customers using <code>FETCH FIRST 3 ROWS ONLY</code>.</li>\n                </ul>\n            </li>\n            \n            <li>\n                <strong>SQL Query 2: Using Aggregated and Analytical Functions</strong>\n                <ul>\n                    <li>Defines a Common Table Expression (CTE) named <code>ranked_customers</code> that:\n                        <ul>\n                            <li>Selects the following columns:\n                                <ul>\n                                    <li><code>customer_id</code>: The unique identifier for each customer.</li>\n                                    <li><code>customer_name</code>: The name of the customer.</li>\n                                    <li><code>purchase_count</code>: The total number of purchases made by each customer, calculated using the <code>COUNT(purchase_id)</code> function.</li>\n                                    <li><code>rank</code>: The rank of each customer based on their <code>purchase_count</code>, calculated using the <code>RANK()</code> analytical function. Customers are ranked in descending order of their purchase count.</li>\n                                </ul>\n                            </li>\n                            <li>Groups the results by: customer_id, customer_name\n                            </li>\n                        </ul>\n                    </li>\n                    <li>The main query then selects from the <code>ranked_customers</code> CTE:\n                        <ul>\n                            <li><code>customer_id</code>: The unique identifier for each customer.</li>\n                            <li><code>customer_name</code>: The name of the customer.</li>\n                            <li><code>purchase_count</code>: The total number of purchases made by each customer.</li>\n                        </ul>\n                    </li>\n                    <li>Filters the results to include only the top 3 customers based on their <code>rank</code> using <code>WHERE rank <= 3</code>.</li>\n                </ul>\n            </li>\n        </ul>\n<br>\n</body>\n</html>"
  }
]